J K : set
J₀ J₁ K₀ K₁ : set

A `J `K
∵
SaveAs (A `J `K) "loop"

Slice (find (θ ↦ ?)) ⟨`?×J₀×K₀, `?×J₀×K₁, `?×J₁×K₀, `?×J₁×K₁⟩

Stratify "/" (fixee 🄰) 🄰 ψ
Stratify "/" (fixee 🄰) 🄰 ψ
Stratify "/" (fixee 🄰) 🄰 ψ

⟨Slice (find 🄰 (q ↦ ?)) ⟨`K₀, `K₁⟩,
 Slice (find 🄰 (p ↦ ?)) ⟨`J₀, `J₁⟩,
 Slice 🄵 θ (⟨`J₀,`J₁⟩ ⟨`K₀,`K₁⟩) min,
 Slice (find 🄱 (p ↦ ?)) ⟨`J₀, `J₁⟩,
 Slice 🄹 θ (⟨`J₀,`J₁⟩ ⟨`?⟩) min,
 Slice (find 🄲 (q ↦ ?)) ⟨`K₀, `K₁⟩,
 Slice 🄽 θ (⟨`?⟩ ⟨`K₀,`K₁⟩) min⟩

Distrib min
Assoc min

⟨Stratify min (fixee 🄰) ⟨🄴,🄵⟩ ψ,
 Stratify min (fixee 🄱) ⟨🄽,🄾,🅁⟩ ψ,
 Stratify min (fixee 🄲) ⟨🅃,🅄,🅆⟩ ψ⟩

Stratify min (fixee 🄰) ⟨🄷,🄸,🄽⟩ ψ
Stratify min (fixee 🄰) ⟨🄸,🄹,🄻⟩ ψ

🄰 🄱 🄲 🄴 🄵 🄶 🄷 🄸 ↦ SynthAuto . ... ψ
/*
⟨Synth (fixee 🄰) 🄰 (A `J₁ `K₁)     ψ ⟨`J₁×K₁⟩,
 Synth (fixee 🄱) 🄱 (B `J₁ `K₀ `K₁) ψ ⟨`J₁×K⟩,
 Synth (fixee 🄲) 🄲 (C `J₀ `J₁ `K₁) ψ ⟨`J×K₁⟩,
 Synth (fixee 🄴) 🄴 (A `J₁ `K₀)     ψ ⟨`J₁×K₀⟩,
 Synth (fixee 🄵) 🄵 (C `J₀ `J₁ `K₀) ψ ⟨`J×K₀⟩,
 Synth (fixee 🄶) 🄶 (A `J₀ `K₁)     ψ ⟨`J₀×K₁⟩,
 Synth (fixee 🄷) 🄷 (B `J₀ `K₀ `K₁) ψ ⟨`J₀×K⟩,
 Synth (fixee 🄸) 🄸 (A `J₀ `K₀)     ψ ⟨`J₀×K₀⟩⟩ */
Opt

SaveAs (A `J `K) "rec"