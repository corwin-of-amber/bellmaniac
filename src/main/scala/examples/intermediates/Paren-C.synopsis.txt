K₀ K₁ K₂ : set
L₀ L₁ L₂ L₃ L₄ L₅ : set

C `K₀ `K₁ `K₂
∵
SaveAs (C `K₀ `K₁ `K₂) "loop"

Slice (find (i ↦ ?)) ⟨`L₀×L₄, `L₀×L₅, `L₁×L₄, `L₁×L₅⟩
Let "/" (slasher 🄰) 🄰 ψ
Let "/" (slasher 🄰) 🄰 ψ
Let "/" (slasher 🄰) 🄰 ψ
Slice (findAll (k ↦ ?)) ⟨`L₂, `L₃⟩
Distrib min
Assoc min
⟨Let min (slasher 🄰) ⟨🄴,🄶⟩ ψ,
 Let min (slasher 🄱) ⟨🄷,🄹⟩ ψ,
 Let min (slasher 🄲) ⟨🄺,🄼⟩ ψ,
 Let min (slasher 🄳) ⟨🄽,🄿⟩ ψ⟩

🄰 🄱 🄲 🄳 🄴 🄵 🄶 🄷 ↦ SynthAuto . ... ψ
/*
⟨Synth 🄰 (C `L₁ `L₃ `L₅) ψ,
 Synth 🄱 (C `L₁ `L₂ `L₅) ψ,
 Synth 🄲 (C `L₁ `L₃ `L₄) ψ,
 Synth 🄳 (C `L₁ `L₂ `L₄) ψ,
 Synth 🄴 (C `L₀ `L₃ `L₅) ψ,
 Synth 🄵 (C `L₀ `L₂ `L₅) ψ,
 Synth 🄶 (C `L₀ `L₃ `L₄) ψ,
 Synth 🄷 (C `L₀ `L₂ `L₄) ψ ⟩
*/
Opt

SaveAs (C `K₀ `K₁ `K₂) "rec"